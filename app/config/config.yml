imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    reset_password_link_template: "replace this text with your reset link for this {token} token"

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: { enabled: false }
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: { enabled: false }
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_pgsql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        server_version: '5.7'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

stof_doctrine_extensions:
    orm:
        default:
            timestampable: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    port: '%mailer_port%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    encryption: '%mailer_encryption%'
    spool: '%mailer_spool%'

# Nelmio CORS
nelmio_cors:
    defaults:
        allow_origin: ['%cors_allow_origin%']
        allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
        allow_headers: ['content-type', 'authorization']
        expose_headers: ['link']
        max_age: 3600
    paths:
        '^/': ~

nelmio_api_doc:
    name: Symfony API Edition
    cache:
        enabled: true
        file: "%kernel.cache_dir%/api-doc.cache"
    sandbox:
        authentication:
            delivery: header
            name:     Authorization
        body_format:
            formats: []
        request_format:
            formats: {'json': 'application/json'}
            method: accept_header

aws:
    version: 'latest'
    region: "%aws_region%"
    credentials:
        key: "%aws_key%"
        secret: "%aws_secret%"
    S3:
        version: 'latest'

oneup_uploader:
    chunks:
        maxage: 86400
        storage:
            directory: "%kernel.cache_dir%/uploader/chunks"

    mappings:
        attachments:
            frontend: custom
            custom_frontend:
                class: AppBundle\Controller\FileUploadController
                name: CustomUploader
            enable_progress: true
            storage:
                directory: "%kernel.root_dir%/../web/uploads/images"